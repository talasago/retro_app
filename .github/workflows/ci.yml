name: ci

on:
  pull_request:
    #paths:
    #  - '**.py'

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  unit_tests_and_component_integration_test: # TODO:後で名前変更
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup postgres
        run: |
          docker-compose up -d
      - name: Read python version from .python-version
        id: python_version
        run: echo "python_version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.python_version.outputs.python_version }}
          # cache: pip

      - name: Install pipenv
        run: pip install pipenv

      - name: install dependencies
        run: pipenv sync --dev

      - name: Output changing files
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            app/**/*.py
            app/*.py

      - name: Execute mypy
        if: ${{ env.GIT_DIFF }}
        uses: tsuyoshicho/action-mypy@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          level: error
          target: ${{ env.GIT_DIFF }}
          fail_on_error: false # TODO:一時的に変更
          ignore_note: true # action-mypy@v3で複数行のエラーを出力できないため
          filter_mode: 'added'
          setup_method: 'nothing'
          install_types: false
          execute_command: 'pipenv run mypy'

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
        with:
          sudo: true
          limit-access-to-actor: true

      - name: Exceute alembic migrations
        run: |
          export POSTGRES_DATABASE="postgres"; export POSTGRES_HOST="localhost"; export POSTGRES_PASSWORD="postgres_password"; export POSTGRES_USER="postgres"
          pipenv run alembic upgrade head
      - name: Execute unit tests and component integration tests
        run: |
          export POSTGRES_DATABASE="postgres"; export POSTGRES_HOST="localhost"; export POSTGRES_PASSWORD="postgres_password"; export POSTGRES_USER="postgres"
          pipenv run pytest
      #- name: Setup reviewdog
      #  uses: reviewdog/action-setup@v1
      #  with:
      #    reviewdog_version: latest

      #- name: Run flake8 and create reviewdog report
      #  run: |
      #    pipenv run flake8 app/*.py app/*/*.py  tests/*.py tests/*/*.py --format=html --htmldir=flake8-report
      #    mkdir -p /tmp/reviewdog
      #    reviewdog -f=flake8 flake8-report/flake8.html -reporter=github-pr-review
      #  env:
      #    REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
